kube-prometheus-stack:
  fullnameOverride: prometheus
  alertmanager:
    # enabled: false
    ingress:
      enabled: true
      pathType: Prefix
      ingressClassName: "nginx"
      hosts:
        - alert-manager.w00t.cloud
    config:
      global:
        resolve_timeout: 5m
      route:
        group_by: ['job']
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
        receiver: 'null'
        routes:
        - match:
            alertname: Watchdog
          receiver: 'null'
      receivers:
      - name: 'null'
      templates:
      - '/etc/alertmanager/config/*.tmpl'
    alertmanagerSpec:
      configSecret: alertmanager-config
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: longhorn
            resources:
              requests:
                storage: 1Gi
  nodeExporter:
    enabled: true
    # serviceMonitor:
    #   relabelings:
    #     - action: replace
    #       regex: (.*)
    #       replacement: $1
    #       sourceLabels:
    #         - __meta_kubernetes_pod_node_name
    #       targetLabel: kubernetes_node
  kube-state-metrics:
    fullnameOverride: kube-state-metrics
  prometheus-node-exporter:
    fullnameOverride: node-exporter
  grafana:
    enabled: false
    forceDeployDashboards: true
    sidecar:
      dashboards:
        multicluster:
          etcd:
            enabled: true
  kubelet:
    enabled: true
    # serviceMonitor:
    #   metricRelabelings:
    #     - action: replace
    #       sourceLabels:
    #         - node
    #       targetLabel: instance
  kubeApiServer:
    enabled: true
  kubeControllerManager:
    enabled: true
    endpoints:
      - 192.168.1.129
      - 192.168.1.130
      - 192.168.1.131
  kubeScheduler:
    enabled: true
    endpoints:
      - 192.168.1.129
      - 192.168.1.130
      - 192.168.1.131
  kubeProxy:
    enabled: true
    endpoints:
      - 192.168.1.129
      - 192.168.1.130
      - 192.168.1.131
  kubeEtcd:
    enabled: true
    endpoints:
      - 192.168.1.129
      - 192.168.1.130
      - 192.168.1.131
    service:
      enabled: true
      port: 2381
      targetPort: 2381
  # Setting this option to 0 disabled CPU limits
  prometheusOperator:
    configReloaderCpu: 0
  prometheus:
    ingress:
      enabled: true
      pathType: Prefix
      # ingressClassName: "traefik"
      # annotations:
      #   traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      hosts:
        - prometheus.w00t.cloud
    thanosService:
      enabled: true
    prometheusSpec:
      replicas: 1
      replicaExternalLabelName: "replica"
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      retention: 6h
      enableAdminAPI: true
      walCompression: true
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: "longhorn"
            resources:
              requests:
                storage: 10Gi
      thanos:
        image: quay.io/thanos/thanos:v0.23.1
        version: v0.22.0
        objectStorageConfig:
          name: thanos-objstore
          key: objstore.yml
      additionalScrapeConfigs:
        - job_name: "node-exporter"
          honor_timestamps: true
          static_configs:
            - targets:
              - 192.168.1.91:9100
              - 192.168.1.151:9100
        - job_name: "telegraf-network"
          honor_timestamps: true
          static_configs:
            - targets:
              - smokeping-telegraf.apps:9283
        - job_name: "cyberpower-ups"
          honor_timestamps: true
          static_configs:
            - targets:
              - 192.168.1.91:9500
        # - job_name: "coredns"
        #   honor_timestamps: true
        #   static_configs:
        #     - targets:
        #         - 192.168.1.1:9153
